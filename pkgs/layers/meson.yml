---
# adapted from https://raw.githubusercontent.com/void-linux/void-packages/master/common/build-style/meson.sh
layers: ["base"]
package:
  stages:
    configure:
      script: |
        # binutils ar needs a plugin when LTO is used on static libraries, so we
        # have to use the gcc-ar wrapper that calls the correct plugin.
        # As seen in https://github.com/mesonbuild/meson/issues/1646 (and its
        # solution, https://github.com/mesonbuild/meson/pull/1649), meson fixed
        # issues with static libraries + LTO by defaulting to gcc-ar themselves.
        # We also force gcc-ar usage in the crossfile above.
        export AR="gcc-ar"

        meson \
          --prefix=/usr \
          --libdir=/usr/lib \
          --libexecdir=/usr/libexec \
          --bindir=/usr/bin \
          --sbindir=/usr/bin \
          --includedir=/usr/include \
          --datadir=/usr/share \
          --mandir=/usr/share/man \
          --infodir=/usr/share/info \
          --localedir=/usr/share/locale \
          --sysconfdir=/etc \
          --localstatedir=/var \
          --sharedstatedir=/var/lib \
          --buildtype=plain \
          --auto-features=auto \
          --wrap-mode=nodownload \
          -Db_lto=true -Db_ndebug=true \
          -Db_staticpic=true \
          ${CONFIGURE_ARGS} . build
    build:
      script: |
        ninja -C build -j${X10_MAKE_JOBS}
    test:
      script: |
        test -n "$SKIP_TESTS" && exit 0
        ninja -C build -j${X10_MAKE_JOBS} test
    install:
      script: |
        ninja -C build -j${X10_MAKE_JOBS} install
  depends:
    # TODO should be hostbuild
    build:
      - dev-base/meson
      - dev-base/ninja
